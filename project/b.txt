declare void @putint(i32)
declare void @memset(i32*, i32, i32)

@x1 = dso_local global i32 0
define dso_local i32 @bubblesort(i32* %x3){
	%x4 = alloca i32*
	store i32* %x3, i32* * %x4
	%x6 = alloca i32
	%x7 = alloca i32
	store i32 0, i32* %x6
	br label %x8

x8:
	%x11 = load i32, i32* %x6
	%x12 = load i32, i32* @x1
	%x13 = sub i32 %x12, 1
	%x14 = icmp slt i32 %x11, %x13
	br i1 %x14, label %x9, label %x10

x9:
	store i32 0, i32* %x7
	br label %x16

x16:
	%x19 = load i32, i32* %x7
	%x20 = load i32, i32* @x1
	%x21 = load i32, i32* %x6
	%x22 = sub i32 %x20, %x21
	%x23 = sub i32 %x22, 1
	%x24 = icmp slt i32 %x19, %x23
	br i1 %x24, label %x17, label %x18

x17:
	%x28 = load i32, i32* %x7
	%x29 = load i32*, i32* * %x4
	%x30 = add i32 0,%x28
	%x31 = mul i32 %x30, 1
	%x32 = getelementptr i32, i32* %x29, i32 %x31
	%x33 = load i32, i32* %x32
	%x34 = load i32, i32* %x7
	%x35 = add i32 %x34, 1
	%x36 = load i32*, i32* * %x4
	%x37 = add i32 0,%x35
	%x38 = mul i32 %x37, 1
	%x39 = getelementptr i32, i32* %x36, i32 %x38
	%x40 = load i32, i32* %x39
	%x41 = icmp sgt i32 %x33, %x40
	br i1 %x41, label %x26, label %x27

x26:
	%x43 = alloca i32
	%x44 = load i32, i32* %x7
	%x45 = add i32 %x44, 1
	%x46 = load i32*, i32* * %x4
	%x47 = add i32 0,%x45
	%x48 = mul i32 %x47, 1
	%x49 = getelementptr i32, i32* %x46, i32 %x48
	%x50 = load i32, i32* %x49
	store i32 %x50, i32* %x43
	%x51 = load i32, i32* %x7
	%x52 = add i32 %x51, 1
	%x53 = load i32*, i32* * %x4
	%x54 = add i32 0,%x52
	%x55 = mul i32 %x54, 1
	%x56 = getelementptr i32, i32* %x53, i32 %x55
	%x57 = load i32, i32* %x7
	%x58 = load i32*, i32* * %x4
	%x59 = add i32 0,%x57
	%x60 = mul i32 %x59, 1
	%x61 = getelementptr i32, i32* %x58, i32 %x60
	%x62 = load i32, i32* %x61
	store i32 %x62, i32* %x56
	%x63 = load i32, i32* %x7
	%x64 = load i32*, i32* * %x4
	%x65 = add i32 0,%x63
	%x66 = mul i32 %x65, 1
	%x67 = getelementptr i32, i32* %x64, i32 %x66
	%x68 = load i32, i32* %x43
	store i32 %x68, i32* %x67
	br label %x27

x27:
	%x69 = load i32, i32* %x7
	%x70 = add i32 %x69, 1
	store i32 %x70, i32* %x7
	br label %x16

x18:
	%x71 = load i32, i32* %x6
	%x72 = add i32 %x71, 1
	store i32 %x72, i32* %x6
	br label %x8

x10:
	ret i32 0
	ret i32 1
}

define dso_local i32 @insertsort(i32* %x74){
	%x75 = alloca i32*
	store i32* %x74, i32* * %x75
	%x77 = alloca i32
	store i32 1, i32* %x77
	br label %x78

x78:
	%x81 = load i32, i32* %x77
	%x82 = load i32, i32* @x1
	%x83 = icmp slt i32 %x81, %x82
	br i1 %x83, label %x79, label %x80

x79:
	%x85 = alloca i32
	%x86 = load i32, i32* %x77
	%x87 = load i32*, i32* * %x75
	%x88 = add i32 0,%x86
	%x89 = mul i32 %x88, 1
	%x90 = getelementptr i32, i32* %x87, i32 %x89
	%x91 = load i32, i32* %x90
	store i32 %x91, i32* %x85
	%x92 = alloca i32
	%x93 = load i32, i32* %x77
	%x94 = sub i32 %x93, 1
	store i32 %x94, i32* %x92
	br label %x95

x95:
	%x98 = load i32, i32* %x92
	%x99 = sub i32 0, 1
	%x100 = icmp sgt i32 %x98, %x99
	br i1 %x100, label %x101, label %x97

x101:
	%x102 = load i32, i32* %x85
	%x103 = load i32, i32* %x92
	%x104 = load i32*, i32* * %x75
	%x105 = add i32 0,%x103
	%x106 = mul i32 %x105, 1
	%x107 = getelementptr i32, i32* %x104, i32 %x106
	%x108 = load i32, i32* %x107
	%x109 = icmp slt i32 %x102, %x108
	br i1 %x109, label %x96, label %x97

x96:
	%x111 = load i32, i32* %x92
	%x112 = add i32 %x111, 1
	%x113 = load i32*, i32* * %x75
	%x114 = add i32 0,%x112
	%x115 = mul i32 %x114, 1
	%x116 = getelementptr i32, i32* %x113, i32 %x115
	%x117 = load i32, i32* %x92
	%x118 = load i32*, i32* * %x75
	%x119 = add i32 0,%x117
	%x120 = mul i32 %x119, 1
	%x121 = getelementptr i32, i32* %x118, i32 %x120
	%x122 = load i32, i32* %x121
	store i32 %x122, i32* %x116
	%x123 = load i32, i32* %x92
	%x124 = sub i32 %x123, 1
	store i32 %x124, i32* %x92
	br label %x95

x97:
	%x125 = load i32, i32* %x92
	%x126 = add i32 %x125, 1
	%x127 = load i32*, i32* * %x75
	%x128 = add i32 0,%x126
	%x129 = mul i32 %x128, 1
	%x130 = getelementptr i32, i32* %x127, i32 %x129
	%x131 = load i32, i32* %x85
	store i32 %x131, i32* %x130
	%x132 = load i32, i32* %x77
	%x133 = add i32 %x132, 1
	store i32 %x133, i32* %x77
	br label %x78

x80:
	ret i32 0
	ret i32 1
}

define dso_local i32 @QuickSort(i32* %x135, i32 %x137, i32 %x139){
	%x136 = alloca i32*
	store i32* %x135, i32* * %x136
	%x138 = alloca i32
	store i32 %x137, i32* %x138
	%x140 = alloca i32
	store i32 %x139, i32* %x140
	%x144 = load i32, i32* %x138
	%x145 = load i32, i32* %x140
	%x146 = icmp slt i32 %x144, %x145
	br i1 %x146, label %x142, label %x143

x142:
	%x148 = alloca i32
	%x149 = load i32, i32* %x138
	store i32 %x149, i32* %x148
	%x150 = alloca i32
	%x151 = load i32, i32* %x140
	store i32 %x151, i32* %x150
	%x152 = alloca i32
	%x153 = load i32, i32* %x138
	%x154 = load i32*, i32* * %x136
	%x155 = add i32 0,%x153
	%x156 = mul i32 %x155, 1
	%x157 = getelementptr i32, i32* %x154, i32 %x156
	%x158 = load i32, i32* %x157
	store i32 %x158, i32* %x152
	br label %x159

x159:
	%x162 = load i32, i32* %x148
	%x163 = load i32, i32* %x150
	%x164 = icmp slt i32 %x162, %x163
	br i1 %x164, label %x160, label %x161

x160:
	br label %x166

x166:
	%x169 = load i32, i32* %x148
	%x170 = load i32, i32* %x150
	%x171 = icmp slt i32 %x169, %x170
	br i1 %x171, label %x172, label %x168

x172:
	%x173 = load i32, i32* %x150
	%x174 = load i32*, i32* * %x136
	%x175 = add i32 0,%x173
	%x176 = mul i32 %x175, 1
	%x177 = getelementptr i32, i32* %x174, i32 %x176
	%x178 = load i32, i32* %x177
	%x179 = load i32, i32* %x152
	%x180 = sub i32 %x179, 1
	%x181 = icmp sgt i32 %x178, %x180
	br i1 %x181, label %x167, label %x168

x167:
	%x183 = load i32, i32* %x150
	%x184 = sub i32 %x183, 1
	store i32 %x184, i32* %x150
	br label %x166

x168:
	%x187 = load i32, i32* %x148
	%x188 = load i32, i32* %x150
	%x189 = icmp slt i32 %x187, %x188
	br i1 %x189, label %x185, label %x186

x185:
	%x191 = load i32, i32* %x148
	%x192 = load i32*, i32* * %x136
	%x193 = add i32 0,%x191
	%x194 = mul i32 %x193, 1
	%x195 = getelementptr i32, i32* %x192, i32 %x194
	%x196 = load i32, i32* %x150
	%x197 = load i32*, i32* * %x136
	%x198 = add i32 0,%x196
	%x199 = mul i32 %x198, 1
	%x200 = getelementptr i32, i32* %x197, i32 %x199
	%x201 = load i32, i32* %x200
	store i32 %x201, i32* %x195
	%x202 = load i32, i32* %x148
	%x203 = add i32 %x202, 1
	store i32 %x203, i32* %x148
	br label %x186

x186:
	br label %x204

x204:
	%x207 = load i32, i32* %x148
	%x208 = load i32, i32* %x150
	%x209 = icmp slt i32 %x207, %x208
	br i1 %x209, label %x210, label %x206

x210:
	%x211 = load i32, i32* %x148
	%x212 = load i32*, i32* * %x136
	%x213 = add i32 0,%x211
	%x214 = mul i32 %x213, 1
	%x215 = getelementptr i32, i32* %x212, i32 %x214
	%x216 = load i32, i32* %x215
	%x217 = load i32, i32* %x152
	%x218 = icmp slt i32 %x216, %x217
	br i1 %x218, label %x205, label %x206

x205:
	%x220 = load i32, i32* %x148
	%x221 = add i32 %x220, 1
	store i32 %x221, i32* %x148
	br label %x204

x206:
	%x224 = load i32, i32* %x148
	%x225 = load i32, i32* %x150
	%x226 = icmp slt i32 %x224, %x225
	br i1 %x226, label %x222, label %x223

x222:
	%x228 = load i32, i32* %x150
	%x229 = load i32*, i32* * %x136
	%x230 = add i32 0,%x228
	%x231 = mul i32 %x230, 1
	%x232 = getelementptr i32, i32* %x229, i32 %x231
	%x233 = load i32, i32* %x148
	%x234 = load i32*, i32* * %x136
	%x235 = add i32 0,%x233
	%x236 = mul i32 %x235, 1
	%x237 = getelementptr i32, i32* %x234, i32 %x236
	%x238 = load i32, i32* %x237
	store i32 %x238, i32* %x232
	%x239 = load i32, i32* %x150
	%x240 = sub i32 %x239, 1
	store i32 %x240, i32* %x150
	br label %x223

x223:
	br label %x159

x161:
	%x241 = load i32, i32* %x148
	%x242 = load i32*, i32* * %x136
	%x243 = add i32 0,%x241
	%x244 = mul i32 %x243, 1
	%x245 = getelementptr i32, i32* %x242, i32 %x244
	%x246 = load i32, i32* %x152
	store i32 %x246, i32* %x245
	%x247 = alloca i32
	%x248 = load i32, i32* %x148
	%x249 = sub i32 %x248, 1
	store i32 %x249, i32* %x247
	%x250 = load i32*, i32* * %x136
	%x252 = load i32, i32* %x138
	%x253 = load i32, i32* %x247
	%x254 = call i32 @QuickSort(i32* %x250, i32 %x252, i32 %x253)
	store i32 %x254, i32* %x247
	%x255 = load i32, i32* %x148
	%x256 = add i32 %x255, 1
	store i32 %x256, i32* %x247
	%x257 = load i32*, i32* * %x136
	%x259 = load i32, i32* %x247
	%x260 = load i32, i32* %x140
	%x261 = call i32 @QuickSort(i32* %x257, i32 %x259, i32 %x260)
	store i32 %x261, i32* %x247
	br label %x143

x143:
	ret i32 0
	ret i32 1
}

define dso_local i32 @getMid(i32* %x263){
	%x264 = alloca i32*
	store i32* %x263, i32* * %x264
	%x266 = alloca i32
	%x270 = load i32, i32* @x1
	%x271 = srem i32 %x270, 2
	%x272 = icmp eq i32 %x271, 0
	br i1 %x272, label %x267, label %x269

x267:
	%x274 = load i32, i32* @x1
	%x275 = sdiv i32 %x274, 2
	store i32 %x275, i32* %x266
	%x276 = load i32, i32* %x266
	%x277 = load i32*, i32* * %x264
	%x278 = add i32 0,%x276
	%x279 = mul i32 %x278, 1
	%x280 = getelementptr i32, i32* %x277, i32 %x279
	%x281 = load i32, i32* %x280
	%x282 = load i32, i32* %x266
	%x283 = sub i32 %x282, 1
	%x284 = load i32*, i32* * %x264
	%x285 = add i32 0,%x283
	%x286 = mul i32 %x285, 1
	%x287 = getelementptr i32, i32* %x284, i32 %x286
	%x288 = load i32, i32* %x287
	%x289 = add i32 %x281, %x288
	%x290 = sdiv i32 %x289, 2
	ret i32 %x290
	br label %x268

x269:
	%x292 = load i32, i32* @x1
	%x293 = sdiv i32 %x292, 2
	store i32 %x293, i32* %x266
	%x294 = load i32, i32* %x266
	%x295 = load i32*, i32* * %x264
	%x296 = add i32 0,%x294
	%x297 = mul i32 %x296, 1
	%x298 = getelementptr i32, i32* %x295, i32 %x297
	%x299 = load i32, i32* %x298
	ret i32 %x299
	br label %x268

x268:
	ret i32 1
}

define dso_local i32 @getMost(i32* %x301){
	%x302 = alloca i32*
	store i32* %x301, i32* * %x302
	%x304 = alloca [1000 x i32]
	%x305 = alloca i32
	store i32 0, i32* %x305
	br label %x306

x306:
	%x309 = load i32, i32* %x305
	%x310 = icmp slt i32 %x309, 1000
	br i1 %x310, label %x307, label %x308

x307:
	%x312 = load i32, i32* %x305
	%x313 = getelementptr [1000 x i32], [1000 x i32]* %x304, i32 0, i32 0
	%x314 = add i32 0,%x312
	%x315 = mul i32 %x314, 1
	%x316 = getelementptr i32, i32* %x313, i32 %x315
	store i32 0, i32* %x316
	%x317 = load i32, i32* %x305
	%x318 = add i32 %x317, 1
	store i32 %x318, i32* %x305
	br label %x306

x308:
	store i32 0, i32* %x305
	%x319 = alloca i32
	%x320 = alloca i32
	store i32 0, i32* %x319
	br label %x321

x321:
	%x324 = load i32, i32* %x305
	%x325 = load i32, i32* @x1
	%x326 = icmp slt i32 %x324, %x325
	br i1 %x326, label %x322, label %x323

x322:
	%x328 = alloca i32
	%x329 = load i32, i32* %x305
	%x330 = load i32*, i32* * %x302
	%x331 = add i32 0,%x329
	%x332 = mul i32 %x331, 1
	%x333 = getelementptr i32, i32* %x330, i32 %x332
	%x334 = load i32, i32* %x333
	store i32 %x334, i32* %x328
	%x335 = load i32, i32* %x328
	%x336 = getelementptr [1000 x i32], [1000 x i32]* %x304, i32 0, i32 0
	%x337 = add i32 0,%x335
	%x338 = mul i32 %x337, 1
	%x339 = getelementptr i32, i32* %x336, i32 %x338
	%x340 = load i32, i32* %x328
	%x341 = getelementptr [1000 x i32], [1000 x i32]* %x304, i32 0, i32 0
	%x342 = add i32 0,%x340
	%x343 = mul i32 %x342, 1
	%x344 = getelementptr i32, i32* %x341, i32 %x343
	%x345 = load i32, i32* %x344
	%x346 = add i32 %x345, 1
	store i32 %x346, i32* %x339
	%x349 = load i32, i32* %x328
	%x350 = getelementptr [1000 x i32], [1000 x i32]* %x304, i32 0, i32 0
	%x351 = add i32 0,%x349
	%x352 = mul i32 %x351, 1
	%x353 = getelementptr i32, i32* %x350, i32 %x352
	%x354 = load i32, i32* %x353
	%x355 = load i32, i32* %x319
	%x356 = icmp sgt i32 %x354, %x355
	br i1 %x356, label %x347, label %x348

x347:
	%x358 = load i32, i32* %x328
	%x359 = getelementptr [1000 x i32], [1000 x i32]* %x304, i32 0, i32 0
	%x360 = add i32 0,%x358
	%x361 = mul i32 %x360, 1
	%x362 = getelementptr i32, i32* %x359, i32 %x361
	%x363 = load i32, i32* %x362
	store i32 %x363, i32* %x319
	%x364 = load i32, i32* %x328
	store i32 %x364, i32* %x320
	br label %x348

x348:
	%x365 = load i32, i32* %x305
	%x366 = add i32 %x365, 1
	store i32 %x366, i32* %x305
	br label %x321

x323:
	%x367 = load i32, i32* %x320
	ret i32 %x367
	ret i32 1
}

define dso_local i32 @revert(i32* %x369){
	%x370 = alloca i32*
	store i32* %x369, i32* * %x370
	%x372 = alloca i32
	%x373 = alloca i32
	%x374 = alloca i32
	store i32 0, i32* %x373
	store i32 0, i32* %x374
	br label %x375

x375:
	%x378 = load i32, i32* %x373
	%x379 = load i32, i32* %x374
	%x380 = icmp slt i32 %x378, %x379
	br i1 %x380, label %x376, label %x377

x376:
	%x382 = load i32, i32* %x373
	%x383 = load i32*, i32* * %x370
	%x384 = add i32 0,%x382
	%x385 = mul i32 %x384, 1
	%x386 = getelementptr i32, i32* %x383, i32 %x385
	%x387 = load i32, i32* %x386
	store i32 %x387, i32* %x372
	%x388 = load i32, i32* %x373
	%x389 = load i32*, i32* * %x370
	%x390 = add i32 0,%x388
	%x391 = mul i32 %x390, 1
	%x392 = getelementptr i32, i32* %x389, i32 %x391
	%x393 = load i32, i32* %x374
	%x394 = load i32*, i32* * %x370
	%x395 = add i32 0,%x393
	%x396 = mul i32 %x395, 1
	%x397 = getelementptr i32, i32* %x394, i32 %x396
	%x398 = load i32, i32* %x397
	store i32 %x398, i32* %x392
	%x399 = load i32, i32* %x374
	%x400 = load i32*, i32* * %x370
	%x401 = add i32 0,%x399
	%x402 = mul i32 %x401, 1
	%x403 = getelementptr i32, i32* %x400, i32 %x402
	%x404 = load i32, i32* %x372
	store i32 %x404, i32* %x403
	%x405 = load i32, i32* %x373
	%x406 = add i32 %x405, 1
	store i32 %x406, i32* %x373
	%x407 = load i32, i32* %x374
	%x408 = sub i32 %x407, 1
	store i32 %x408, i32* %x374
	br label %x375

x377:
	ret i32 0
	ret i32 1
}

define dso_local i32 @arrCopy(i32* %x410, i32* %x412){
	%x411 = alloca i32*
	store i32* %x410, i32* * %x411
	%x413 = alloca i32*
	store i32* %x412, i32* * %x413
	%x415 = alloca i32
	store i32 0, i32* %x415
	br label %x416

x416:
	%x419 = load i32, i32* %x415
	%x420 = load i32, i32* @x1
	%x421 = icmp slt i32 %x419, %x420
	br i1 %x421, label %x417, label %x418

x417:
	%x423 = load i32, i32* %x415
	%x424 = load i32*, i32* * %x413
	%x425 = add i32 0,%x423
	%x426 = mul i32 %x425, 1
	%x427 = getelementptr i32, i32* %x424, i32 %x426
	%x428 = load i32, i32* %x415
	%x429 = load i32*, i32* * %x411
	%x430 = add i32 0,%x428
	%x431 = mul i32 %x430, 1
	%x432 = getelementptr i32, i32* %x429, i32 %x431
	%x433 = load i32, i32* %x432
	store i32 %x433, i32* %x427
	%x434 = load i32, i32* %x415
	%x435 = add i32 %x434, 1
	store i32 %x435, i32* %x415
	br label %x416

x418:
	ret i32 0
	ret i32 1
}

define dso_local i32 @calSum(i32* %x437, i32 %x439){
	%x438 = alloca i32*
	store i32* %x437, i32* * %x438
	%x440 = alloca i32
	store i32 %x439, i32* %x440
	%x442 = alloca i32
	store i32 0, i32* %x442
	%x443 = alloca i32
	store i32 0, i32* %x443
	br label %x444

x444:
	%x447 = load i32, i32* %x443
	%x448 = load i32, i32* @x1
	%x449 = icmp slt i32 %x447, %x448
	br i1 %x449, label %x445, label %x446

x445:
	%x451 = load i32, i32* %x442
	%x452 = load i32, i32* %x443
	%x453 = load i32*, i32* * %x438
	%x454 = add i32 0,%x452
	%x455 = mul i32 %x454, 1
	%x456 = getelementptr i32, i32* %x453, i32 %x455
	%x457 = load i32, i32* %x456
	%x458 = add i32 %x451, %x457
	store i32 %x458, i32* %x442
	%x462 = load i32, i32* %x443
	%x463 = load i32, i32* %x440
	%x464 = srem i32 %x462, %x463
	%x465 = load i32, i32* %x440
	%x466 = sub i32 %x465, 1
	%x467 = icmp ne i32 %x464, %x466
	br i1 %x467, label %x459, label %x461

x459:
	%x469 = load i32, i32* %x443
	%x470 = load i32*, i32* * %x438
	%x471 = add i32 0,%x469
	%x472 = mul i32 %x471, 1
	%x473 = getelementptr i32, i32* %x470, i32 %x472
	store i32 0, i32* %x473
	br label %x460

x461:
	%x475 = load i32, i32* %x443
	%x476 = load i32*, i32* * %x438
	%x477 = add i32 0,%x475
	%x478 = mul i32 %x477, 1
	%x479 = getelementptr i32, i32* %x476, i32 %x478
	%x480 = load i32, i32* %x442
	store i32 %x480, i32* %x479
	store i32 0, i32* %x442
	br label %x460

x460:
	%x481 = load i32, i32* %x443
	%x482 = add i32 %x481, 1
	store i32 %x482, i32* %x443
	br label %x444

x446:
	ret i32 0
	ret i32 1
}

define dso_local i32 @avgPooling(i32* %x484, i32 %x486){
	%x485 = alloca i32*
	store i32* %x484, i32* * %x485
	%x487 = alloca i32
	store i32 %x486, i32* %x487
	%x489 = alloca i32
	%x490 = alloca i32
	store i32 0, i32* %x490
	store i32 0, i32* %x489
	%x491 = alloca i32
	br label %x492

x492:
	%x495 = load i32, i32* %x490
	%x496 = load i32, i32* @x1
	%x497 = icmp slt i32 %x495, %x496
	br i1 %x497, label %x493, label %x494

x493:
	%x502 = load i32, i32* %x490
	%x503 = load i32, i32* %x487
	%x504 = sub i32 %x503, 1
	%x505 = icmp slt i32 %x502, %x504
	br i1 %x505, label %x499, label %x501

x499:
	%x507 = load i32, i32* %x489
	%x508 = load i32, i32* %x490
	%x509 = load i32*, i32* * %x485
	%x510 = add i32 0,%x508
	%x511 = mul i32 %x510, 1
	%x512 = getelementptr i32, i32* %x509, i32 %x511
	%x513 = load i32, i32* %x512
	%x514 = add i32 %x507, %x513
	store i32 %x514, i32* %x489
	br label %x500

x501:
	%x518 = load i32, i32* %x490
	%x519 = load i32, i32* %x487
	%x520 = sub i32 %x519, 1
	%x521 = icmp eq i32 %x518, %x520
	br i1 %x521, label %x515, label %x517

x515:
	%x523 = load i32*, i32* * %x485
	%x524 = add i32 0,0
	%x525 = mul i32 %x524, 1
	%x526 = getelementptr i32, i32* %x523, i32 %x525
	%x527 = load i32, i32* %x526
	store i32 %x527, i32* %x491
	%x528 = load i32*, i32* * %x485
	%x529 = add i32 0,0
	%x530 = mul i32 %x529, 1
	%x531 = getelementptr i32, i32* %x528, i32 %x530
	%x532 = load i32, i32* %x489
	%x533 = load i32, i32* %x487
	%x534 = sdiv i32 %x532, %x533
	store i32 %x534, i32* %x531
	br label %x516

x517:
	%x536 = load i32, i32* %x489
	%x537 = load i32, i32* %x490
	%x538 = load i32*, i32* * %x485
	%x539 = add i32 0,%x537
	%x540 = mul i32 %x539, 1
	%x541 = getelementptr i32, i32* %x538, i32 %x540
	%x542 = load i32, i32* %x541
	%x543 = add i32 %x536, %x542
	%x544 = load i32, i32* %x491
	%x545 = sub i32 %x543, %x544
	store i32 %x545, i32* %x489
	%x546 = load i32, i32* %x490
	%x547 = load i32, i32* %x487
	%x548 = sub i32 %x546, %x547
	%x549 = add i32 %x548, 1
	%x550 = load i32*, i32* * %x485
	%x551 = add i32 0,%x549
	%x552 = mul i32 %x551, 1
	%x553 = getelementptr i32, i32* %x550, i32 %x552
	%x554 = load i32, i32* %x553
	store i32 %x554, i32* %x491
	%x555 = load i32, i32* %x490
	%x556 = load i32, i32* %x487
	%x557 = sub i32 %x555, %x556
	%x558 = add i32 %x557, 1
	%x559 = load i32*, i32* * %x485
	%x560 = add i32 0,%x558
	%x561 = mul i32 %x560, 1
	%x562 = getelementptr i32, i32* %x559, i32 %x561
	%x563 = load i32, i32* %x489
	%x564 = load i32, i32* %x487
	%x565 = sdiv i32 %x563, %x564
	store i32 %x565, i32* %x562
	br label %x516

x516:
	br label %x500

x500:
	%x566 = load i32, i32* %x490
	%x567 = add i32 %x566, 1
	store i32 %x567, i32* %x490
	br label %x492

x494:
	%x568 = load i32, i32* @x1
	%x569 = load i32, i32* %x487
	%x570 = sub i32 %x568, %x569
	%x571 = add i32 %x570, 1
	store i32 %x571, i32* %x490
	br label %x572

x572:
	%x575 = load i32, i32* %x490
	%x576 = load i32, i32* @x1
	%x577 = icmp slt i32 %x575, %x576
	br i1 %x577, label %x573, label %x574

x573:
	%x579 = load i32, i32* %x490
	%x580 = load i32*, i32* * %x485
	%x581 = add i32 0,%x579
	%x582 = mul i32 %x581, 1
	%x583 = getelementptr i32, i32* %x580, i32 %x582
	store i32 0, i32* %x583
	%x584 = load i32, i32* %x490
	%x585 = add i32 %x584, 1
	store i32 %x585, i32* %x490
	br label %x572

x574:
	ret i32 0
	ret i32 1
}

define dso_local i32 @main(){
	store i32 32, i32* @x1
	%x588 = alloca [32 x i32]
	%x589 = alloca [32 x i32]
	%x590 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x591 = add i32 0,0
	%x592 = mul i32 %x591, 1
	%x593 = getelementptr i32, i32* %x590, i32 %x592
	store i32 7, i32* %x593
	%x594 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x595 = add i32 0,1
	%x596 = mul i32 %x595, 1
	%x597 = getelementptr i32, i32* %x594, i32 %x596
	store i32 23, i32* %x597
	%x598 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x599 = add i32 0,2
	%x600 = mul i32 %x599, 1
	%x601 = getelementptr i32, i32* %x598, i32 %x600
	store i32 89, i32* %x601
	%x602 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x603 = add i32 0,3
	%x604 = mul i32 %x603, 1
	%x605 = getelementptr i32, i32* %x602, i32 %x604
	store i32 26, i32* %x605
	%x606 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x607 = add i32 0,4
	%x608 = mul i32 %x607, 1
	%x609 = getelementptr i32, i32* %x606, i32 %x608
	store i32 282, i32* %x609
	%x610 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x611 = add i32 0,5
	%x612 = mul i32 %x611, 1
	%x613 = getelementptr i32, i32* %x610, i32 %x612
	store i32 254, i32* %x613
	%x614 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x615 = add i32 0,6
	%x616 = mul i32 %x615, 1
	%x617 = getelementptr i32, i32* %x614, i32 %x616
	store i32 27, i32* %x617
	%x618 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x619 = add i32 0,7
	%x620 = mul i32 %x619, 1
	%x621 = getelementptr i32, i32* %x618, i32 %x620
	store i32 5, i32* %x621
	%x622 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x623 = add i32 0,8
	%x624 = mul i32 %x623, 1
	%x625 = getelementptr i32, i32* %x622, i32 %x624
	store i32 83, i32* %x625
	%x626 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x627 = add i32 0,9
	%x628 = mul i32 %x627, 1
	%x629 = getelementptr i32, i32* %x626, i32 %x628
	store i32 273, i32* %x629
	%x630 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x631 = add i32 0,10
	%x632 = mul i32 %x631, 1
	%x633 = getelementptr i32, i32* %x630, i32 %x632
	store i32 574, i32* %x633
	%x634 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x635 = add i32 0,11
	%x636 = mul i32 %x635, 1
	%x637 = getelementptr i32, i32* %x634, i32 %x636
	store i32 905, i32* %x637
	%x638 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x639 = add i32 0,12
	%x640 = mul i32 %x639, 1
	%x641 = getelementptr i32, i32* %x638, i32 %x640
	store i32 354, i32* %x641
	%x642 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x643 = add i32 0,13
	%x644 = mul i32 %x643, 1
	%x645 = getelementptr i32, i32* %x642, i32 %x644
	store i32 657, i32* %x645
	%x646 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x647 = add i32 0,14
	%x648 = mul i32 %x647, 1
	%x649 = getelementptr i32, i32* %x646, i32 %x648
	store i32 935, i32* %x649
	%x650 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x651 = add i32 0,15
	%x652 = mul i32 %x651, 1
	%x653 = getelementptr i32, i32* %x650, i32 %x652
	store i32 264, i32* %x653
	%x654 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x655 = add i32 0,16
	%x656 = mul i32 %x655, 1
	%x657 = getelementptr i32, i32* %x654, i32 %x656
	store i32 639, i32* %x657
	%x658 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x659 = add i32 0,17
	%x660 = mul i32 %x659, 1
	%x661 = getelementptr i32, i32* %x658, i32 %x660
	store i32 459, i32* %x661
	%x662 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x663 = add i32 0,18
	%x664 = mul i32 %x663, 1
	%x665 = getelementptr i32, i32* %x662, i32 %x664
	store i32 29, i32* %x665
	%x666 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x667 = add i32 0,19
	%x668 = mul i32 %x667, 1
	%x669 = getelementptr i32, i32* %x666, i32 %x668
	store i32 68, i32* %x669
	%x670 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x671 = add i32 0,20
	%x672 = mul i32 %x671, 1
	%x673 = getelementptr i32, i32* %x670, i32 %x672
	store i32 929, i32* %x673
	%x674 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x675 = add i32 0,21
	%x676 = mul i32 %x675, 1
	%x677 = getelementptr i32, i32* %x674, i32 %x676
	store i32 756, i32* %x677
	%x678 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x679 = add i32 0,22
	%x680 = mul i32 %x679, 1
	%x681 = getelementptr i32, i32* %x678, i32 %x680
	store i32 452, i32* %x681
	%x682 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x683 = add i32 0,23
	%x684 = mul i32 %x683, 1
	%x685 = getelementptr i32, i32* %x682, i32 %x684
	store i32 279, i32* %x685
	%x686 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x687 = add i32 0,24
	%x688 = mul i32 %x687, 1
	%x689 = getelementptr i32, i32* %x686, i32 %x688
	store i32 58, i32* %x689
	%x690 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x691 = add i32 0,25
	%x692 = mul i32 %x691, 1
	%x693 = getelementptr i32, i32* %x690, i32 %x692
	store i32 87, i32* %x693
	%x694 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x695 = add i32 0,26
	%x696 = mul i32 %x695, 1
	%x697 = getelementptr i32, i32* %x694, i32 %x696
	store i32 96, i32* %x697
	%x698 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x699 = add i32 0,27
	%x700 = mul i32 %x699, 1
	%x701 = getelementptr i32, i32* %x698, i32 %x700
	store i32 36, i32* %x701
	%x702 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x703 = add i32 0,28
	%x704 = mul i32 %x703, 1
	%x705 = getelementptr i32, i32* %x702, i32 %x704
	store i32 39, i32* %x705
	%x706 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x707 = add i32 0,29
	%x708 = mul i32 %x707, 1
	%x709 = getelementptr i32, i32* %x706, i32 %x708
	store i32 28, i32* %x709
	%x710 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x711 = add i32 0,30
	%x712 = mul i32 %x711, 1
	%x713 = getelementptr i32, i32* %x710, i32 %x712
	store i32 1, i32* %x713
	%x714 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x715 = add i32 0,31
	%x716 = mul i32 %x715, 1
	%x717 = getelementptr i32, i32* %x714, i32 %x716
	store i32 290, i32* %x717
	%x718 = alloca i32
	%x719 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x721 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x723 = call i32 @arrCopy(i32* %x719, i32* %x721)
	store i32 %x723, i32* %x718
	%x724 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x726 = call i32 @revert(i32* %x724)
	store i32 %x726, i32* %x718
	%x727 = alloca i32
	store i32 0, i32* %x727
	br label %x728

x728:
	%x731 = load i32, i32* %x727
	%x732 = icmp slt i32 %x731, 32
	br i1 %x732, label %x729, label %x730

x729:
	%x734 = load i32, i32* %x727
	%x735 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x736 = add i32 0,%x734
	%x737 = mul i32 %x736, 1
	%x738 = getelementptr i32, i32* %x735, i32 %x737
	%x739 = load i32, i32* %x738
	store i32 %x739, i32* %x718
	%x740 = load i32, i32* %x718
	call void @putint(i32 %x740)
	%x741 = load i32, i32* %x727
	%x742 = add i32 %x741, 1
	store i32 %x742, i32* %x727
	br label %x728

x730:
	%x743 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x745 = call i32 @bubblesort(i32* %x743)
	store i32 %x745, i32* %x718
	store i32 0, i32* %x727
	br label %x746

x746:
	%x749 = load i32, i32* %x727
	%x750 = icmp slt i32 %x749, 32
	br i1 %x750, label %x747, label %x748

x747:
	%x752 = load i32, i32* %x727
	%x753 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x754 = add i32 0,%x752
	%x755 = mul i32 %x754, 1
	%x756 = getelementptr i32, i32* %x753, i32 %x755
	%x757 = load i32, i32* %x756
	store i32 %x757, i32* %x718
	%x758 = load i32, i32* %x718
	call void @putint(i32 %x758)
	%x759 = load i32, i32* %x727
	%x760 = add i32 %x759, 1
	store i32 %x760, i32* %x727
	br label %x746

x748:
	%x761 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x763 = call i32 @getMid(i32* %x761)
	store i32 %x763, i32* %x718
	%x764 = load i32, i32* %x718
	call void @putint(i32 %x764)
	%x765 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x767 = call i32 @getMost(i32* %x765)
	store i32 %x767, i32* %x718
	%x768 = load i32, i32* %x718
	call void @putint(i32 %x768)
	%x769 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x771 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x773 = call i32 @arrCopy(i32* %x769, i32* %x771)
	store i32 %x773, i32* %x718
	%x774 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x776 = call i32 @bubblesort(i32* %x774)
	store i32 %x776, i32* %x718
	store i32 0, i32* %x727
	br label %x777

x777:
	%x780 = load i32, i32* %x727
	%x781 = icmp slt i32 %x780, 32
	br i1 %x781, label %x778, label %x779

x778:
	%x783 = load i32, i32* %x727
	%x784 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x785 = add i32 0,%x783
	%x786 = mul i32 %x785, 1
	%x787 = getelementptr i32, i32* %x784, i32 %x786
	%x788 = load i32, i32* %x787
	store i32 %x788, i32* %x718
	%x789 = load i32, i32* %x718
	call void @putint(i32 %x789)
	%x790 = load i32, i32* %x727
	%x791 = add i32 %x790, 1
	store i32 %x791, i32* %x727
	br label %x777

x779:
	%x792 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x794 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x796 = call i32 @arrCopy(i32* %x792, i32* %x794)
	store i32 %x796, i32* %x718
	%x797 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x799 = call i32 @insertsort(i32* %x797)
	store i32 %x799, i32* %x718
	store i32 0, i32* %x727
	br label %x800

x800:
	%x803 = load i32, i32* %x727
	%x804 = icmp slt i32 %x803, 32
	br i1 %x804, label %x801, label %x802

x801:
	%x806 = load i32, i32* %x727
	%x807 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x808 = add i32 0,%x806
	%x809 = mul i32 %x808, 1
	%x810 = getelementptr i32, i32* %x807, i32 %x809
	%x811 = load i32, i32* %x810
	store i32 %x811, i32* %x718
	%x812 = load i32, i32* %x718
	call void @putint(i32 %x812)
	%x813 = load i32, i32* %x727
	%x814 = add i32 %x813, 1
	store i32 %x814, i32* %x727
	br label %x800

x802:
	%x815 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x817 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x819 = call i32 @arrCopy(i32* %x815, i32* %x817)
	store i32 %x819, i32* %x718
	store i32 0, i32* %x727
	store i32 31, i32* %x718
	%x820 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x822 = load i32, i32* %x727
	%x823 = load i32, i32* %x718
	%x824 = call i32 @QuickSort(i32* %x820, i32 %x822, i32 %x823)
	store i32 %x824, i32* %x718
	br label %x825

x825:
	%x828 = load i32, i32* %x727
	%x829 = icmp slt i32 %x828, 32
	br i1 %x829, label %x826, label %x827

x826:
	%x831 = load i32, i32* %x727
	%x832 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x833 = add i32 0,%x831
	%x834 = mul i32 %x833, 1
	%x835 = getelementptr i32, i32* %x832, i32 %x834
	%x836 = load i32, i32* %x835
	store i32 %x836, i32* %x718
	%x837 = load i32, i32* %x718
	call void @putint(i32 %x837)
	%x838 = load i32, i32* %x727
	%x839 = add i32 %x838, 1
	store i32 %x839, i32* %x727
	br label %x825

x827:
	%x840 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x842 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x844 = call i32 @arrCopy(i32* %x840, i32* %x842)
	store i32 %x844, i32* %x718
	%x845 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x847 = call i32 @calSum(i32* %x845, i32 4)
	store i32 %x847, i32* %x718
	store i32 0, i32* %x727
	br label %x848

x848:
	%x851 = load i32, i32* %x727
	%x852 = icmp slt i32 %x851, 32
	br i1 %x852, label %x849, label %x850

x849:
	%x854 = load i32, i32* %x727
	%x855 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x856 = add i32 0,%x854
	%x857 = mul i32 %x856, 1
	%x858 = getelementptr i32, i32* %x855, i32 %x857
	%x859 = load i32, i32* %x858
	store i32 %x859, i32* %x718
	%x860 = load i32, i32* %x718
	call void @putint(i32 %x860)
	%x861 = load i32, i32* %x727
	%x862 = add i32 %x861, 1
	store i32 %x862, i32* %x727
	br label %x848

x850:
	%x863 = getelementptr [32 x i32], [32 x i32]* %x588, i32 0, i32 0
	%x865 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x867 = call i32 @arrCopy(i32* %x863, i32* %x865)
	store i32 %x867, i32* %x718
	%x868 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x870 = call i32 @avgPooling(i32* %x868, i32 3)
	store i32 %x870, i32* %x718
	store i32 0, i32* %x727
	br label %x871

x871:
	%x874 = load i32, i32* %x727
	%x875 = icmp slt i32 %x874, 32
	br i1 %x875, label %x872, label %x873

x872:
	%x877 = load i32, i32* %x727
	%x878 = getelementptr [32 x i32], [32 x i32]* %x589, i32 0, i32 0
	%x879 = add i32 0,%x877
	%x880 = mul i32 %x879, 1
	%x881 = getelementptr i32, i32* %x878, i32 %x880
	%x882 = load i32, i32* %x881
	store i32 %x882, i32* %x718
	%x883 = load i32, i32* %x718
	call void @putint(i32 %x883)
	%x884 = load i32, i32* %x727
	%x885 = add i32 %x884, 1
	store i32 %x885, i32* %x727
	br label %x871

x873:
	ret i32 0
	ret i32 1
}

