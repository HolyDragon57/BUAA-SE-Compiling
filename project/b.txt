declare void @putint(i32)
declare void @memset(i32*, i32, i32)

@x1 = dso_local constant [2 x [1 x i32]] [[1 x i32] [i32 1], [1 x i32] [i32 3]]
@x2 = dso_local global [2 x [3 x i32]] [[3 x i32] [i32 1, i32 0, i32 0], [3 x i32] zeroinitializer]
@x3 = dso_local global [4 x [4 x i32]]  zeroinitializer
@x4 = dso_local global [5 x i32]  zeroinitializer
@x5 = dso_local global [3 x i32] [i32 1, i32 2, i32 0]
define dso_local i32 @main(){
	%x8 = getelementptr [2 x [1 x i32]], [2 x [1 x i32]]* @x1, i32 0, i32 0
	%x9 = add i32 0,1
	%x10 = mul i32 %x9, 1
	%x11 = getelementptr [1 x i32], [1 x i32]* %x8, i32 0, i32 0
	%x12 = add i32 %x10,0
	%x13 = mul i32 %x12, 1
	%x14 = getelementptr i32, i32* %x11, i32 %x13
	%x15 = load i32, i32* %x14
	%x16 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @x2, i32 0, i32 0
	%x17 = add i32 0,0
	%x18 = mul i32 %x17, 3
	%x19 = getelementptr [3 x i32], [3 x i32]* %x16, i32 0, i32 0
	%x20 = add i32 %x18,0
	%x21 = mul i32 %x20, 1
	%x22 = getelementptr i32, i32* %x19, i32 %x21
	%x23 = load i32, i32* %x22
	%x24 = add i32 %x15, %x23
	%x25 = getelementptr [2 x [1 x i32]], [2 x [1 x i32]]* @x1, i32 0, i32 0
	%x26 = add i32 0,0
	%x27 = mul i32 %x26, 1
	%x28 = getelementptr [1 x i32], [1 x i32]* %x25, i32 0, i32 0
	%x29 = add i32 %x27,0
	%x30 = mul i32 %x29, 1
	%x31 = getelementptr i32, i32* %x28, i32 %x30
	%x32 = load i32, i32* %x31
	%x33 = add i32 %x24, %x32
	%x34 = getelementptr [3 x i32], [3 x i32]* @x5, i32 0, i32 0
	%x35 = add i32 0,1
	%x36 = mul i32 %x35, 1
	%x37 = getelementptr i32, i32* %x34, i32 %x36
	%x38 = load i32, i32* %x37
	%x39 = add i32 %x33, %x38
	%x40 = getelementptr [5 x i32], [5 x i32]* @x4, i32 0, i32 0
	%x41 = add i32 0,4
	%x42 = mul i32 %x41, 1
	%x43 = getelementptr i32, i32* %x40, i32 %x42
	%x44 = load i32, i32* %x43
	%x45 = add i32 %x39, %x44
	call void @putint(i32 %x45)
	ret i32 0
	ret i32 1
}

