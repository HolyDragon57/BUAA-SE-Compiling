declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)

@x1 = dso_local global [4 x [2 x i32]] zeroinitializer
@x2 = dso_local constant [8 x i32] [i32 9, i32 2, i32 3, i32 4, i32 1, i32 5, i32 4, i32 0]
@x3 = dso_local global [4 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4], [2 x i32] [i32 6, i32 3], [2 x i32] [i32 7, i32 8]]
@x4 = dso_local global [4 x [2 x i32]] [[2 x i32] [i32 6, i32 7], [2 x i32] [i32 4, i32 5], [2 x i32] [i32 5, i32 6], [2 x i32] [i32 9, i32 10]]

define dso_local i32 @main(){
	%x6 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @x4, i32 0, i32 0
	%x7 = getelementptr [2 x i32], [2 x i32]* %x6, i32 0, i32 0
	%x8 = add i32 0, 2
	%x9 = mul i32 %x8, 2
	%x10 = add i32 %x9, 1
	%x11 = getelementptr i32, i32* %x7, i32 %x10
	%x12 = load i32, i32* %x11
	%x13 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @x4, i32 0, i32 0
	%x14 = getelementptr [2 x i32], [2 x i32]* %x13, i32 0, i32 0
	%x15 = add i32 0, 0
	%x16 = mul i32 %x15, 2
	%x17 = add i32 %x16, 1
	%x18 = getelementptr i32, i32* %x14, i32 %x17
	%x19 = load i32, i32* %x18
	%x20 = add i32 %x12, %x19
	%x21 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @x4, i32 0, i32 0
	%x22 = getelementptr [2 x i32], [2 x i32]* %x21, i32 0, i32 0
	%x23 = add i32 0, 0
	%x24 = mul i32 %x23, 2
	%x25 = add i32 %x24, 0
	%x26 = getelementptr i32, i32* %x22, i32 %x25
	%x27 = load i32, i32* %x26
	%x28 = sub i32 %x20, %x27
	%x29 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @x1, i32 0, i32 0
	%x30 = getelementptr [2 x i32], [2 x i32]* %x29, i32 0, i32 0
	%x31 = add i32 0, 2
	%x32 = mul i32 %x31, 2
	%x33 = add i32 %x32, 0
	%x34 = getelementptr i32, i32* %x30, i32 %x33
	%x35 = load i32, i32* %x34
	%x36 = add i32 %x28, %x35
	call void @putint(i32 %x36)
	%x37 = alloca [4 x [2 x i32]]
	%x38 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x37, i32 0, i32 0
	%x39 = getelementptr [2 x i32], [2 x i32]* %x38, i32 0, i32 0
	call void @memset(i32* %x39, i32 0, i32 32)
	%x40 = alloca [8 x i32]
	%x41 = getelementptr [8 x i32], [8 x i32]* %x40, i32 0, i32 0
	call void @memset(i32* %x41, i32 0, i32 32)
	%x42 = getelementptr i32, i32* %x41, i32 0
	store i32 1, i32* %x42
	%x43 = getelementptr i32, i32* %x41, i32 1
	store i32 2, i32* %x43
	%x44 = getelementptr i32, i32* %x41, i32 2
	store i32 3, i32* %x44
	%x45 = getelementptr i32, i32* %x41, i32 3
	store i32 4, i32* %x45
	%x46 = getelementptr i32, i32* %x41, i32 4
	store i32 5, i32* %x46
	%x47 = getelementptr i32, i32* %x41, i32 5
	store i32 6, i32* %x47
	%x48 = getelementptr i32, i32* %x41, i32 6
	store i32 7, i32* %x48
	%x49 = getelementptr i32, i32* %x41, i32 7
	store i32 8, i32* %x49
	%x50 = alloca [4 x [2 x i32]]
	%x51 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x50, i32 0, i32 0
	%x52 = getelementptr [2 x i32], [2 x i32]* %x51, i32 0, i32 0
	call void @memset(i32* %x52, i32 0, i32 32)
	%x53 = getelementptr i32, i32* %x52, i32 0
	store i32 1, i32* %x53
	%x54 = getelementptr i32, i32* %x52, i32 1
	store i32 2, i32* %x54
	%x55 = getelementptr i32, i32* %x52, i32 2
	store i32 3, i32* %x55
	%x56 = getelementptr i32, i32* %x52, i32 3
	store i32 4, i32* %x56
	%x57 = getelementptr i32, i32* %x52, i32 4
	store i32 5, i32* %x57
	%x58 = getelementptr i32, i32* %x52, i32 5
	store i32 6, i32* %x58
	%x59 = getelementptr i32, i32* %x52, i32 6
	store i32 7, i32* %x59
	%x60 = getelementptr i32, i32* %x52, i32 7
	store i32 8, i32* %x60
	call void @putch(i32 10)
	%x61 = alloca [4 x [2 x i32]]
	%x62 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x61, i32 0, i32 0
	%x63 = getelementptr [2 x i32], [2 x i32]* %x62, i32 0, i32 0
	call void @memset(i32* %x63, i32 0, i32 32)
	%x64 = getelementptr [8 x i32], [8 x i32]* %x40, i32 0, i32 0
	%x65 = add i32 0, 6
	%x66 = getelementptr i32, i32* %x64, i32 %x65
	%x67 = load i32, i32* %x66
	%x68 = getelementptr i32, i32* %x63, i32 0
	store i32 %x67, i32* %x68
	%x69 = getelementptr [8 x i32], [8 x i32]* %x40, i32 0, i32 0
	%x70 = add i32 0, 7
	%x71 = getelementptr i32, i32* %x69, i32 %x70
	%x72 = load i32, i32* %x71
	%x73 = getelementptr i32, i32* %x63, i32 1
	store i32 %x72, i32* %x73
	%x74 = getelementptr i32, i32* %x63, i32 2
	store i32 3, i32* %x74
	%x75 = getelementptr i32, i32* %x63, i32 3
	store i32 4, i32* %x75
	%x76 = getelementptr i32, i32* %x63, i32 4
	store i32 5, i32* %x76
	%x77 = getelementptr i32, i32* %x63, i32 5
	store i32 6, i32* %x77
	%x78 = getelementptr i32, i32* %x63, i32 6
	store i32 7, i32* %x78
	%x79 = getelementptr i32, i32* %x63, i32 7
	store i32 8, i32* %x79
	%x80 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x61, i32 0, i32 0
	%x81 = getelementptr [2 x i32], [2 x i32]* %x80, i32 0, i32 0
	%x82 = add i32 0, 3
	%x83 = mul i32 %x82, 2
	%x84 = add i32 %x83, 1
	%x85 = getelementptr i32, i32* %x81, i32 %x84
	%x86 = load i32, i32* %x85
	%x87 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x61, i32 0, i32 0
	%x88 = getelementptr [2 x i32], [2 x i32]* %x87, i32 0, i32 0
	%x89 = add i32 0, 0
	%x90 = mul i32 %x89, 2
	%x91 = add i32 %x90, 0
	%x92 = getelementptr i32, i32* %x88, i32 %x91
	%x93 = load i32, i32* %x92
	%x94 = add i32 %x86, %x93
	%x95 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x61, i32 0, i32 0
	%x96 = getelementptr [2 x i32], [2 x i32]* %x95, i32 0, i32 0
	%x97 = add i32 0, 0
	%x98 = mul i32 %x97, 2
	%x99 = add i32 %x98, 1
	%x100 = getelementptr i32, i32* %x96, i32 %x99
	%x101 = load i32, i32* %x100
	%x102 = add i32 %x94, %x101
	%x103 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %x37, i32 0, i32 0
	%x104 = getelementptr [2 x i32], [2 x i32]* %x103, i32 0, i32 0
	%x105 = add i32 0, 2
	%x106 = mul i32 %x105, 2
	%x107 = add i32 %x106, 0
	%x108 = getelementptr i32, i32* %x104, i32 %x107
	%x109 = load i32, i32* %x108
	%x110 = add i32 %x102, %x109
	call void @putint(i32 %x110)
	ret i32 0
}
