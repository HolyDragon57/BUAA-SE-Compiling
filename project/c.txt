
declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare void @putarray(i32, i32*)
declare i32 @getarray(i32*)
declare i32 @getch()
declare void @putch(i32)
@TAPE_LEN  = dso_local global  i32  65536
@BUFFER_LEN  = dso_local global  i32  32768
@tape  = dso_local global  [65536 x i32] zeroinitializer
@program  = dso_local global  [32768 x i32] zeroinitializer
@ptr  = dso_local global  i32 0
define dso_local i32 @main(){
0:

%1 = alloca i32
%2 = alloca i32
%3 = alloca i32
%4 = alloca i32
store i32 0 , i32* %1
%5 = call i32 @getint()
store i32 %5 , i32* %2
br label %6
6:

%7 = load i32, i32 * %1
%8 = load i32, i32 * %2
%9 = icmp slt i32 %7, %8
br i1 %9 ,label %10, label %16
10:

%11 = load i32, i32 * %1
%12 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 %11
%13 = call i32 @getch()
store i32 %13, i32* %12
%14 = load i32, i32 * %1
%15 = add i32 %14, 1
store i32 %15, i32* %1
br label %6
16:

%17 = load i32, i32 * %1
%18 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 %17
store i32 0, i32* %18
store i32 0, i32* %1
br label %19
19:

%20 = load i32, i32 * %1
%21 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 %20
%22 = load i32 , i32* %21
%23 = icmp ne i32 %22, 0 
br i1 %23 ,label %24, label %107
24:

%25 = load i32, i32 * %1
%26 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 %25
%27 = load i32 , i32* %26
store i32 %27, i32* %3
%28 = load i32, i32 * %3
%29 = icmp eq i32 %28, 62
br i1 %29 ,label %30, label %33
30:

%31 = load i32, i32 * @ptr
%32 = add i32 %31, 1
store i32 %32, i32* @ptr
br label %104

33:

%34 = load i32, i32 * %3
%35 = icmp eq i32 %34, 60
br i1 %35 ,label %36, label %39
36:

%37 = load i32, i32 * @ptr
%38 = sub i32 %37, 1
store i32 %38, i32* @ptr
br label %104

39:

%40 = load i32, i32 * %3
%41 = icmp eq i32 %40, 43
br i1 %41 ,label %42, label %49
42:

%43 = load i32, i32 * @ptr
%44 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %43
%45 = load i32, i32 * @ptr
%46 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %45
%47 = load i32 , i32* %46
%48 = add i32 %47, 1
store i32 %48, i32* %44
br label %104

49:

%50 = load i32, i32 * %3
%51 = icmp eq i32 %50, 45
br i1 %51 ,label %52, label %59
52:

%53 = load i32, i32 * @ptr
%54 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %53
%55 = load i32, i32 * @ptr
%56 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %55
%57 = load i32 , i32* %56
%58 = sub i32 %57, 1
store i32 %58, i32* %54
br label %104

59:

%60 = load i32, i32 * %3
%61 = icmp eq i32 %60, 46
br i1 %61 ,label %62, label %66
62:

%63 = load i32, i32 * @ptr
%64 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %63
%65 = load i32 , i32* %64
call void @putch(i32 %65)
br label %104

66:

%67 = load i32, i32 * %3
%68 = icmp eq i32 %67, 44
br i1 %68 ,label %69, label %73
69:

%70 = load i32, i32 * @ptr
%71 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %70
%72 = call i32 @getch()
store i32 %72, i32* %71
br label %104

73:

%74 = load i32, i32 * %3
%75 = icmp eq i32 %74, 93
br i1 %75 ,label %76, label %104
76:

%77 = load i32, i32 * @ptr
%78 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 %77
%79 = load i32 , i32* %78
%80 = icmp ne i32 %79, 0 
br i1 %80 ,label %81, label %104
81:

store i32 1, i32* %4
br label %82
82:

%83 = load i32, i32 * %4
%84 = icmp sgt i32 %83, 0
br i1 %84 ,label %85, label %103
85:

%86 = load i32, i32 * %1
%87 = sub i32 %86, 1
store i32 %87, i32* %1
%88 = load i32, i32 * %1
%89 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 %88
%90 = load i32 , i32* %89
store i32 %90, i32* %3
%91 = load i32, i32 * %3
%92 = icmp eq i32 %91, 91
br i1 %92 ,label %93, label %96
93:

%94 = load i32, i32 * %4
%95 = sub i32 %94, 1
store i32 %95, i32* %4
br label %102

96:

%97 = load i32, i32 * %3
%98 = icmp eq i32 %97, 93
br i1 %98 ,label %99, label %102
99:

%100 = load i32, i32 * %4
%101 = add i32 %100, 1
store i32 %101, i32* %4
br label %102

102:

br label %82
103:

br label %104

104:

%105 = load i32, i32 * %1
%106 = add i32 %105, 1
store i32 %106, i32* %1
br label %19
107:

ret i32 0
ret i32 1
}
