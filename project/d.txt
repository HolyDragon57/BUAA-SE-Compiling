; ModuleID = 'main.c'
source_filename = "main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@TAPE_LEN = dso_local constant i32 65536, align 4
@BUFFER_LEN = dso_local constant i32 32768, align 4
@ptr = dso_local global i32 0, align 4
@program = common dso_local global [32768 x i32] zeroinitializer, align 16
@tape = common dso_local global [65536 x i32] zeroinitializer, align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  %6 = call i32 (...) @getint()
  store i32 %6, i32* %3, align 4
  br label %7

7:                                                ; preds = %11, %0
  %8 = load i32, i32* %2, align 4
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = call i32 (...) @getch()
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [32768 x i32], [32768 x i32]* @program, i64 0, i64 %14
  store i32 %12, i32* %15, align 4
  %16 = load i32, i32* %2, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %2, align 4
  br label %7

18:                                               ; preds = %7
  %19 = load i32, i32* %2, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32768 x i32], [32768 x i32]* @program, i64 0, i64 %20
  store i32 0, i32* %21, align 4
  store i32 0, i32* %2, align 4
  br label %22

22:                                               ; preds = %125, %18
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32768 x i32], [32768 x i32]* @program, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %128

28:                                               ; preds = %22
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32768 x i32], [32768 x i32]* @program, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %4, align 4
  %33 = load i32, i32* %4, align 4
  %34 = icmp eq i32 %33, 62
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = load i32, i32* @ptr, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* @ptr, align 4
  br label %125

38:                                               ; preds = %28
  %39 = load i32, i32* %4, align 4
  %40 = icmp eq i32 %39, 60
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load i32, i32* @ptr, align 4
  %43 = sub nsw i32 %42, 1
  store i32 %43, i32* @ptr, align 4
  br label %124

44:                                               ; preds = %38
  %45 = load i32, i32* %4, align 4
  %46 = icmp eq i32 %45, 43
  br i1 %46, label %47, label %56

47:                                               ; preds = %44
  %48 = load i32, i32* @ptr, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, 1
  %53 = load i32, i32* @ptr, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %54
  store i32 %52, i32* %55, align 4
  br label %123

56:                                               ; preds = %44
  %57 = load i32, i32* %4, align 4
  %58 = icmp eq i32 %57, 45
  br i1 %58, label %59, label %68

59:                                               ; preds = %56
  %60 = load i32, i32* @ptr, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sub nsw i32 %63, 1
  %65 = load i32, i32* @ptr, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %66
  store i32 %64, i32* %67, align 4
  br label %122

68:                                               ; preds = %56
  %69 = load i32, i32* %4, align 4
  %70 = icmp eq i32 %69, 46
  br i1 %70, label %71, label %77

71:                                               ; preds = %68
  %72 = load i32, i32* @ptr, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 %75)
  br label %121

77:                                               ; preds = %68
  %78 = load i32, i32* %4, align 4
  %79 = icmp eq i32 %78, 44
  br i1 %79, label %80, label %85

80:                                               ; preds = %77
  %81 = call i32 (...) @getch()
  %82 = load i32, i32* @ptr, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %83
  store i32 %81, i32* %84, align 4
  br label %120

85:                                               ; preds = %77
  %86 = load i32, i32* %4, align 4
  %87 = icmp eq i32 %86, 93
  br i1 %87, label %88, label %119

88:                                               ; preds = %85
  %89 = load i32, i32* @ptr, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [65536 x i32], [65536 x i32]* @tape, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %119

94:                                               ; preds = %88
  store i32 1, i32* %5, align 4
  br label %95

95:                                               ; preds = %117, %94
  %96 = load i32, i32* %5, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %118

98:                                               ; preds = %95
  %99 = load i32, i32* %2, align 4
  %100 = sub nsw i32 %99, 1
  store i32 %100, i32* %2, align 4
  %101 = load i32, i32* %2, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [32768 x i32], [32768 x i32]* @program, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %4, align 4
  %105 = load i32, i32* %4, align 4
  %106 = icmp eq i32 %105, 91
  br i1 %106, label %107, label %110

107:                                              ; preds = %98
  %108 = load i32, i32* %5, align 4
  %109 = sub nsw i32 %108, 1
  store i32 %109, i32* %5, align 4
  br label %117

110:                                              ; preds = %98
  %111 = load i32, i32* %4, align 4
  %112 = icmp eq i32 %111, 93
  br i1 %112, label %113, label %116

113:                                              ; preds = %110
  %114 = load i32, i32* %5, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %5, align 4
  br label %116

116:                                              ; preds = %113, %110
  br label %117

117:                                              ; preds = %116, %107
  br label %95

118:                                              ; preds = %95
  br label %119

119:                                              ; preds = %118, %88, %85
  br label %120

120:                                              ; preds = %119, %80
  br label %121

121:                                              ; preds = %120, %71
  br label %122

122:                                              ; preds = %121, %59
  br label %123

123:                                              ; preds = %122, %47
  br label %124

124:                                              ; preds = %123, %41
  br label %125

125:                                              ; preds = %124, %35
  %126 = load i32, i32* %2, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %2, align 4
  br label %22

128:                                              ; preds = %22
  ret i32 0
}

declare dso_local i32 @getint(...) #1

declare dso_local i32 @getch(...) #1

declare dso_local i32 @putch(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}